{"name":"Gleak","tagline":"Global variable leak detection for Node.js","body":"Global variable leak detection for Node.js [![Build Status](https://secure.travis-ci.org/aheckmann/gleak.png)](http://travis-ci.org/aheckmann/gleak)\r\n\r\n    var detector = require('gleak')();\r\n\r\n    detector.detect().forEach(function (name) {\r\n      console.warn('found global leak: %s', name);\r\n    });\r\n\r\nGlobal variable leaks in javascript can bite you when you least\r\nexpect it. Do something about it now and run this module after\r\nyour tests, after HTTP requests, and after you brush your teeth.\r\n\r\n## Detectable\r\n\r\nAs demonstrated, gleak comes with the `detect` method which returns\r\nan array of all found variable leaks.\r\n\r\nOften times we want to run the detector many times, progressively\r\nchecking for any new leaks that occurred since we last checked. In\r\nthis scenario we can utilize the `detectNew` method.\r\n\r\n    var detector = require('gleak')();\r\n\r\n    x = 1;\r\n    detector.detectNew(); // ['x']\r\n    detector.detectNew(); // []\r\n    y = 3;\r\n    detector.detectNew(); // ['y']\r\n\r\n## Configurable:\r\n\r\nGleak comes configured for Node.js and will ignore built-ins by default\r\nbut you can configure it however your like:\r\n\r\n    var gleak = require('gleak')();\r\n    gleak.ignore(app, db);\r\n\r\nThe `gleak.ignore` method allows us to add globals we want to ignore\r\nwhile safely ignoring duplicates.\r\n\r\n`gleak.whitelist` is an array that holds all globals we are ignoring.\r\nYou can push to it or blow it away completely with your own list too.\r\n\r\n    var gleak = require('gleak')();\r\n    gleak.whitelist = [dnode, cluster];\r\n\r\nChanges to your whitelists do not impact any global settings. For example:\r\n\r\n    var gleak = require('gleak');\r\n    var g1 = gleak();\r\n    var g2 = gleak();\r\n\r\n    g1.ignore(myglobal);\r\n    g2.whitelist.indexOf(myglobal) === -1;\r\n\r\n`g2` does not inherit changes to `g1`s whitelist.\r\n\r\n## Printable\r\n\r\nIf you don't want anything fancy and want to quickly dump all\r\nglobal leaks to your console, just call `print()`.\r\n\r\n    var gleak = require('gleak')();\r\n    gleak.print(); // prints \"Gleak!: leakedVarName\"\r\n\r\n## Expressable\r\n\r\nWe might want to print leaked variables to our console after each\r\nHTTP request. This is especially helpful during development.\r\nTo accomplish this we can utilize the bundled [express](http://expressjs.com) middleware:\r\n\r\n    var app = express.createServer();\r\n    app.use(gleak.middleware());\r\n\r\nWhat if we want to output to a different stream than stderr?\r\n\r\n    app.use(gleak.middleware(stream));\r\n\r\nHow about customized logging formats?\r\n\r\n    app.use(gleak.middleware('\\x1b[31mLeak!\\x1b[0m %s'));\r\n\r\nCombining formats and streams?\r\n\r\n    app.use(gleak.middleware(stream, '\\x1b[31mLeak!\\x1b[0m %s'));\r\n\r\n## Installable\r\n\r\n    npm install gleak\r\n\r\n### Node version\r\nCompatible with Node >=0.6\r\n\r\nNode >= 0.4.1 probably still works too but the tests no longer confirm it.\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2011 [Aaron Heckmann](aaron.heckmann+github@gmail.com)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"UA-30723428-1","note":"Don't delete this file! It's used internally to help with page regeneration."}